{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/xml_parser.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/webgl.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js"],"names":["root","factory","exports","module","define","amd","pdfjsLib","this","installedModules","__w_pdfjs_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_display_utils","_api","_util","_annotation_layer","_worker_options","_text_layer","_svg","PDFNetworkStream","require","PDFFetchStream","isFetchSupported","setPDFNetworkStreamFactory","params","isValidFetchUrl","url","link","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","anchor","query","end","Math","length","src","Promise","resolve","reject","script","document","Error","head","documentElement","appendChild","details","console","SVG_NS","width","height","canvas","context","reset","canvasAndContext","destroy","constructor","baseUrl","isCompressed","[object Object]","compressionType","CMapCompressionType","BINARY","baseURI","fetch","then","async","response","ok","statusText","cMapData","Uint8Array","arrayBuffer","stringToBytes","text","catch","reason","request","XMLHttpRequest","DONE","responseText","svg","createElement","type","PageViewport","viewBox","scale","rotation","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","super","msg","Response","ReadableStream","protocol","URL","ex","pdfDateStringRegex","started","times","time","warn","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","input","isString","RegExp","matches","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arr","resultLength","arrayByteLength","pos","data","item","itemLength","byteLength","bytes","String","strBuf","chunkEnd","chunk","capability","isSettled","verbosity","VerbosityLevel","INFOS","v","undefined","arr1","arr2","every","element","index","obj","otherUrl","base","origin","e","other","absoluteUrl","_isValidProtocol","str","level","Number","code","PDFStringTranslateTable","decodeURIComponent","escape","unescape","encodeURIComponent","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","NEED_PASSWORD","INCORRECT_PASSWORD","unreachable","cond","shadow","prop","configurable","writable","message","status","NullCharactersRegExp","IsLittleEndianCached","buffer8","Uint32Array","buffer","view32","isLittleEndian","IsEvalSupportedCached","Function","isEvalSupported","rgbBuf","g","b","m1","m2","p1","p2","p3","p4","transpose","a","first","sx","sy","rect1","rect2","compare","orderedX","sort","orderedY","result","createObjectURL","digits","contentType","forceDataSchema","blob","Blob","ii","b1","b2","b3","task","PDFDocumentLoadingTask","source","isArrayBuffer","PDFDataRangeTransport","range","rangeTransport","worker","window","pdfBytes","isNaN","location","href","DOMCMapReaderFactory","maxImageSize","disableFontFace","disableRange","disableStream","disableAutoFetch","setVerbosityLevel","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","pdfDataRangeTransport","initialData","progressiveDone","messageHandler","sendWithPromise","apiVersion","password","rangeChunkSize","postMessageTransfers","docBaseUrl","ignoreErrors","fontExtraProperties","workerId","_fetchDocument","networkStreamPromise","networkStream","_transport_stream","PDFDataTransportStream","createPDFNetworkStream","httpHeaders","withCredentials","all","_message_handler","MessageHandler","transport","WorkerTransport","showUnverifiedSignatures","pdfNetworkStreamFactory","_font_loader","_canvas","_metadata","_webgl","nextDocumentId","_capability","createPromiseCapability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","numPages","fingerprint","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getOutline","getPermissions","getMetadata","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","startCleanup","loadingTask","loadingParams","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","intentStates","rotate","userUnit","view","getViewport","getAnnotations","intent","annotationsPromise","annotationsIntent","render","canvasContext","viewport","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","renderingIntent","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","DOMCanvasFactory","webGLContext","WebGLContext","enable","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","renderTask","transparency","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","normalizeWhitespace","disableCombineTextItems","sendWithStream","combineTextItems","highWaterMark","size","textContent","getTextContent","readableStream","reader","getReader","items","styles","pump","done","_destroy","pageCache","waitOn","force","renderCompleted","cancel","clear","resetStats","keys","some","StatTimer","_startRenderPage","_renderPageChunk","operatorListChunk","args","streamReader","setTimeout","AbortException","stats","LoopbackPort","defer","_listeners","_defer","_deferred","postMessage","forEach","cloned","WeakMap","cloneValue","transfers","byteOffset","Array","desc","addEventListener","removeEventListener","indexOf","splice","terminate","pdfWorkerPorts","fallbackWorkerSrc","fakeWorkerCapability","isWorkerDisabled","nextFakeWorkerId","pdfjsFilePath","getWorkerSrc","workerSrc","deprecated","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","globalThis","WorkerMessageHandler","getVerbosityLevel","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","isSameOrigin","wrapper","createCDNWrapper","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","info","loadScript","loader","setupFakeWorkerGlobal","workerHandler","fontLoader","FontLoader","_onUnsupportedFeature","_params","cMapUrl","CMapReaderFactory","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","page","terminated","cancelAllRequests","sink","getFullReader","evt","loaded","read","close","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","_numPages","PasswordException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","UnknownErrorException","exception","updatePassword","exportedData","has","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","fetched","builtInCMap","featureId","results","metadata","Metadata","contentDispositionFilename","filename","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","canvasInRendering","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","BaseFontLoader","nativeFontFaces","styleElement","addNativeFontFace","nativeFontFace","insertRule","styleSheet","sheet","remove","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","supported","fonts","_loadTestFont","loadingContext","requests","nextRequestId","loadTestFontId","navigator","exec","userAgent","otherRequest","shift","atob","int32","offset","spliceString","insert","chunk1","ctx","called","checksum","string32","btoa","names","loadedName","div","span","isFontReady","compiledGlyphs","translatedData","FontFace","bytesToString","mimetype","getPathGenerator","character","cmds","current","js","cmd","_pattern_helper","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","_transformMatrix","f","ad_bc","bc_ad","old","_transformStack","_originalSave","prev","pop","_originalRestore","_originalTranslate","_originalScale","angle","cosValue","sinValue","_originalRotate","CachedCanvases","cache","getCanvas","trackTransform","canvasEntry","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","setCurrentPoint","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","cachedCanvases","_cachedGetSinglePixelWidth","putBinaryImageData","imgData","ImageData","destPos","j","thisChunkHeight","elemsInThisChunk","partialChunkHeight","fullChunks","totalChunks","chunkImgData","srcPos","dest","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","backdrop","isEnabled","composed","layer","subtype","composeFn","hasBackdrop","chunkSize","row","chunkHeight","genericComposeSMask","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","op","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","beginLayout","executionStartIdx","continueCallback","argsArrayLen","fnId","chunkOperations","endTime","steps","OPS","depObjId","objsPool","endSMaskGroup","drawImage","endLayout","style","lineCap","lineJoin","limit","miterLimit","dashArray","dashPhase","states","state","globalAlpha","globalCompositeOperation","suspendSMaskGroup","beginSMaskGroup","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","scaleY","mozCurrentTransformInverse","deltaTransform","resumeSMaskGroup","ops","getSinglePixelWidth","xw","yh","consumePath","needRestore","paths","pendingTextPaths","beginPath","path","spacing","fontRefName","fontObj","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","rise","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","isFontSubpixelAAEnabled","glyphs","showType3Text","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","isNum","scaledX","scaledY","scaledAccentX","scaledAccentY","vmetric","vx","vy","restoreNeeded","isSpace","fontChar","accent","measuredWidth","characterScaleX","spacingLength","operatorListId","transformed","xWidth","yWidth","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","getShadingPatternFromIR","arguments","strokeStyle","patternIR","inv","bl","br","ul","ur","x0","y0","x1","y1","matrix","bbox","group","isolated","knockout","bounds","canvasBounds","scaleX","startTransformInverse","imageSmoothingEnabled","mozImageSmoothingEnabled","img","isPatternFill","COMPILE_TYPE3_GLYPHS","j0","width1","points","POINT_TYPES","lineSize","data0","count","sum","Int32Array","outlines","pp","coords","p0","step","kk","ll","compileType3Glyph","compiled","maskCanvas","positions","images","image","map","w","h","imgToPaint","tmpCanvas","widthScale","heightScale","HTMLElement","tmpCtx","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","position","getCanvasPosition","appendImage","left","top","entry","tag","inverse","raw","shadingIR","ShadingIRs","applyBoundingBox","Path2D","region","fromIR","colorStops","r1","getPattern","grad","createMeshCanvas","drawTriangle","c1","c2","c3","tmp","colors","rowSize","x2","y2","x3","y3","xa","car","cag","cab","xb","cbr","cbg","cbb","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","combinesScale","figures","backgroundColor","boundsWidth","boundsHeight","paddedWidth","BORDER_SIZE","paddedHeight","drawFigures","owner","matrixScale","temporaryPatternCanvas","PaintType","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","combinedScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","clipBbox","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","FormatError","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","_postMessage","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","_deleteStreamController","allSettled","_xml_parser","_repair","xmlDocument","SimpleXMLParser","parser","_metadataMap","Map","_parse","replace","codes","d1","d2","d3","chars","substring","rdf","firstChild","nextSibling","nodeName","hasChildNodes","children","childNodes","jj","toLowerCase","set","trim","getAll","XMLParserErrorCode","isWhitespace","ch","SimpleDOMNode","nodeValue","parentNode","child","join","_resolveEntities","entity","onResolveEntity","_parseContent","attributes","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","parsed","_parseProcessingInstruction","attrStart","parseXml","onError","onEndElement","pi","onPi","onComment","onCdata","q2","complexDoctype","doctypeContent","onDoctype","content","onBeginElement","onText","_currentFragment","_stack","_errorCode","parseFromString","isWhitespaceString","node","isEmpty","lastElement","_queuedChunks","_progressiveDone","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","readers","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","_enabled","WebGLUtils","tryInitGL","loadShader","gl","shaderType","shader","COMPILE_STATUS","errorMsg","createVertexShader","VERTEX_SHADER","createFragmentShader","FRAGMENT_SHADER","createProgram","shaders","program","LINK_STATUS","createTexture","textureId","texture","CLAMP_TO_EDGE","NEAREST","currentGL","currentCanvas","generateGL","premultipliedalpha","smaskCache","figuresCache","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","createBuffer","Float32Array","STATIC_DRAW","initSmaskGL","drawingBufferHeight","TEXTURE0","maskTexture","TEXTURE1","positionLocation","BLEND","ONE_MINUS_SRC_ALPHA","COLOR_BUFFER_BIT","flush","initFiguresGL","coordsMap","colorsMap","pIndex","cIndex","col","coordsBuffer","colorsBuffer","colorLocation","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","linkService","downloadManager","imageResourcesPath","svgFactory","container","_createContainer","normalizeRect","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","_createPopup","trigger","popup","PopupElement","title","modificationDate","contents","hideWrapper","className","addLinkAttributes","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","getDestinationHash","destination","navigateTo","getAnchorUrl","executeNamedAction","hasPopup","JSON","hasAppearance","fieldValue","TEXT_ALIGNMENT","multiLine","readOnly","fieldName","maxLen","comb","combWidth","_setTextStyle","textAlignment","fontFamily","buttonValue","selectElement","combo","options","multiSelect","option","optionElement","displayValue","exportValue","includes","IGNORE_TYPES","parentType","selector","parentId","parentElement","querySelector","parentLeft","parseFloat","parentWidth","transformOrigin","pinned","hideElement","setAttribute","BACKGROUND_ENLIGHT","dateObject","PDFDateString","stringify","date","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","line","pin","hasAttribute","removeAttribute","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","file","getFilenameFromUrl","eventBus","dispatch","stringToPDFString","_download","downloadData","sortedAnnotations","popupAnnotations","annotations","DOMSVGFactory","renderTextLayer","NonWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","tx","fontName","fontHeight","fontAscent","ascent","descent","_fontInspectorEnabled","PI","shouldScaleText","absScaleX","absScaleY","_textContentStream","_enhanceTextSelection","angleCos","angleSin","divWidth","divHeight","getAxialAlignedBoundingBox","right","bottom","_canceled","textDivs","_textDivs","textDivsLength","findPositiveMin","ts","expand","_bounds","_viewport","expanded","boxes","box","x1New","x2New","expandBoundsLTR","expandBounds","divProperties","Float64Array","boxScale","horizon","Infinity","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","FontInspector","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","_processItems","len","styleCache","_layoutText","measureText","_render","timeout","textItems","textStyles","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","renderParameters","SVGGraphics","SVG_DEFAULTS","fontStyle","fontWeight","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","body","crc","crc32","deflateSync","literals","deflateBlocks","idat","adler","adler32","deflateSyncUncompressed","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","encode","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opList","fn","opTree","opListElement","opListToTree","opTreeElement","tspan","charWidth","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","colorStop","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","NetworkManager","isHttp","test","getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","_source","_manager","_rangeChunkSize","_rangeRequestReaders","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_url","_fullRequestId","_headersReceivedCapability","_disableRange","_cachedChunks","_storedError","fullRequestXhrId","fullRequestXhr","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","createResponseStatusError","_requestId","onClosed","_close","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","contentDispositionStr","match","iter","quot","part","parts","rfc2231getparam","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","from","err","quotindex","extvalue","encodingend","langvalue","charset","hex","createFetchOptions","headers","abortController","method","signal","credentials","redirect","createHeaders","Headers","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","_headersCapability","AbortController","_abortController","_headers","validateResponseStatus","_readCapability"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  isFetchSupported,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\n// modified by ngx-extended-pdf-viewer\n// import { apiCompatibilityParams } from \"./display/api_compatibility.js\";\n// end of modification\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  if (isFetchSupported()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    // modified by ngx-extended-pdf-viewer - removed node.js support\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // modified by ngx-extended-pdf-viewer - removed node.js support\n  // apiCompatibilityParams,\n  // end of modification\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory {\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url)\n        .then(async response => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          let cMapData;\n          if (this.isCompressed) {\n            cMapData = new Uint8Array(await response.arrayBuffer());\n          } else {\n            cMapData = stringToBytes(await response.text());\n          }\n          return { cMapData, compressionType };\n        })\n        .catch(reason => {\n          throw new Error(\n            `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n              `CMap at: ${url}`\n          );\n        });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    }).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n          `CMap at: ${url}`\n      );\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array} viewBox - The xMin, yMin, xMax and yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n// Gets the file name from a given URL.\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = resolve;\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  PageViewport,\n  RenderingCancelledException,\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  DEFAULT_LINK_REL,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  StatTimer,\n  isFetchSupported,\n  isValidFetchUrl,\n  loadScript,\n  deprecated,\n  PDFDateString,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the whitelisted protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array} arr - the array of the arrays (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  // makeCssRgb() can be called thousands of times. Using ´rgbBuf` avoids\n  // creating many intermediate strings.\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // eslint-disable-next-line no-shadow\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nexport {\n  BaseException,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  OPS,\n  VerbosityLevel,\n  UNSUPPORTED_FEATURES,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  FontType,\n  ImageKind,\n  CMapCompressionType,\n  AbortException,\n  InvalidPDFException,\n  MissingPDFException,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  StreamType,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  Util,\n  FormatError,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  bytesToString,\n  createPromiseCapability,\n  createObjectURL,\n  getVerbosityLevel,\n  info,\n  isArrayBuffer,\n  isArrayEqual,\n  isBool,\n  isEmptyObj,\n  isNum,\n  isString,\n  isSameOrigin,\n  createValidAbsoluteUrl,\n  IsLittleEndianCached,\n  IsEvalSupportedCached,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  utf8StringToString,\n  warn,\n  unreachable,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\n// ngx-extended-pdf-viewer doesn't need the apiCompatibilityParams\n// import { apiCompatibilityParams } from \"./api_compatibility.js\";\n// end of modification\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\n// ngx-extended-pdf-viewer doesn't need the node.js support\n// import { isNodeJS } from \"../shared/is_node.js\";\n//  end of modification\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string}     [url] - The URL of the PDF.\n * @property {TypedArray|Array|string} [data] - Binary PDF data. Use typed\n *    arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use atob() to convert it to a binary string first.\n * @property {Object}     [httpHeaders] - Basic authentication headers.\n * @property {boolean}    [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is false.\n * @property {string}     [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number}     [length] - The PDF file length. It's used for\n *   progress reports and range requests operations.\n * @property {PDFDataRangeTransport} [range]\n * @property {number}     [rangeChunkSize] - Specify maximum number of bytes\n *   fetched per range request. The default value is 2^16 = 65536.\n * @property {PDFWorker}  [worker] - The worker that will be used for\n *   the loading and parsing of the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document,\n *   used when attempting to recover valid absolute URLs for annotations, and\n *   outline items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined\n *   Adobe CMaps are located. Include trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are\n *   binary packed.\n * @property {Object} [CMapReaderFactory] - The factory that will be\n *   used when reading built-in CMap files. Providing a custom factory is useful\n *   for environments without `XMLHttpRequest` support, such as e.g. Node.js.\n *   The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size\n *   in total pixels, i.e. width * height. Images above this value will not be\n *   rendered. Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can eval\n *   strings as JS. Primarily used to improve performance of font rendering,\n *   and when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are\n *   converted to OpenType fonts and loaded via font face rules. If disabled,\n *   fonts will be rendered using a built-in font renderer that constructs the\n *   glyphs with primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [disableRange] - Disable range request loading\n *   of PDF files. When enabled, and if the server supports partial content\n *   requests, then the PDF will be fetched in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file\n *   data. By default PDF.js attempts to load PDFs in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF\n *   file data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *   NOTE: It is also necessary to disable streaming, see above,\n *         in order for disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging\n *   PDF.js (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object} streamTypes - Used stream types in the document (an item\n *   is set to true if specific stream ID was used in the document).\n * @property {Object} fontTypes - Used font types in the document (an item\n *   is set to true if specific font ID was used in the document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n * NOTE: If a URL is used to fetch the PDF data a standard XMLHttpRequest(XHR)\n * is used, which means it must follow the same origin rules that any XHR does\n * e.g. No cross domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src\n * Can be a url to where a PDF is located, a typed array (Uint8Array)\n * already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory = params.CMapReaderFactory || DOMCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    // modified by ngx-extended-pdf-viewer - we don't need the api compatibility\n    params.disableFontFace = false;\n    // end of modification\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId Unique document id, used as MessageHandler id.\n * @returns {Promise} The promise, which is resolved when worker id of\n *                    MessageHandler is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique document loading task id -- used in MessageHandlers.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Shows if loading task is destroyed.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if wrong or no password was provided.\n       * The callback receives two parameters: function that needs to be called\n       * with new password and reason (see {PasswordResponses}).\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties: {number} loaded and {number} total.\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback to when unsupported feature is used. The callback receives\n       * an {UNSUPPORTED_FEATURES} argument.\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * Aborts all network requests and destroys worker.\n     * @returns {Promise} A promise that is resolved after destruction activity\n     *                    is completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n * @param {number} length\n * @param {Uint8Array} initialData\n * @param {boolean} progressiveDone\n */\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a PDFDocument in the worker thread. Also, contains commonly used\n * properties that can be read synchronously.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {number} Total number of pages the PDF contains.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise} A promise that is resolved with a {@link PDFPageProxy}\n   *   object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise} A promise that is resolved with the page index (starting\n   *   from zero) that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named destinations to reference numbers.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise} A promise that is resolved with all information\n   *   of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} containing\n   *   the page labels that correspond to the page indexes, or `null` when\n   *   no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the viewer preferences, or `null` when no viewer preferences are present\n   *   in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the currently supported actions, or `null` when no OpenAction exists.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} of all the\n   *   JavaScript strings in the name tree, or `null` if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that is a\n   * tree outline (if it has one) of the PDF. The tree is in the format of:\n   * [\n   *   {\n   *     title: string,\n   *     bold: boolean,\n   *     italic: boolean,\n   *     color: rgb Uint8ClampedArray,\n   *     count: integer or undefined,\n   *     dest: dest obj,\n   *     url: string,\n   *     items: array of more items like this\n   *   },\n   *   ...\n   * ]\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that contains\n   *   the permission flags for the PDF document, or `null` when\n   *   no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} that has\n   *   `info` and `metadata` properties. `info` is an {Object} filled with\n   *   anything available in the information dictionary and similarly\n   *   `metadata` is a {Metadata} object with information from the metadata\n   *   section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {TypedArray} that has\n   *   the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved when the document's data\n   *   is loaded. It is resolved with an {Object} that contains the `length`\n   *   property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise} A promise this is resolved with current statistics about\n   *   document structures (see {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document, on both the main- and\n   * worker-threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   *       currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {Object} A subset of the current {DocumentInitParameters}, which are\n   *   either needed in the viewer and/or whose default values may be affected\n   *   by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {array} items - array of {@link TextItem}\n * @property {Object} styles - {@link TextStyle} objects, indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - text content.\n * @property {string} dir - text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {array} transform - transformation matrix.\n * @property {number} width - width in device space.\n * @property {number} height - height in device space.\n * @property {string} fontName - font name used by pdf.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - font ascent.\n * @property {number} descent - font descent.\n * @property {boolean} vertical - text is in vertical mode.\n * @property {string} fontFamily - possible font family\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *                    can be either 'display' (viewable annotations) or 'print'\n *                    (printable annotations).\n *                    If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by\n *                          calling the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'\n *                    (default value is 'display').\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering\n *                     for some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not\n *                     interactive form elements are rendered in the display\n *                     layer. If so, we do not render them on canvas as well.\n * @property {Array}  [transform] - Additional transform, applied\n *                    just before viewport transform.\n * @property {Object} [imageLayer] - An object that has beginLayout,\n *                    endLayout and appendImage functions.\n * @property {Object} [canvasFactory] - The factory that will be used\n *                    when creating canvases. The default value is\n *                    {DOMCanvasFactory}.\n * @property {Object} [background] - Background to use for the canvas.\n *                    Can use any valid canvas.fillStyle: A DOMString parsed as\n *                    CSS <color> value, a CanvasGradient object (a linear or\n *                    radial gradient) or a CanvasPattern object (a repetitive\n *                    image). The default value is 'rgb(255,255,255)'.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array} fnArray - Array containing the operator functions.\n * @property {Array} argsArray - Array containing the arguments of the\n *                               functions.\n */\n\n/**\n * Proxy to a PDFPage in the worker thread.\n * @alias PDFPageProxy\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this.intentStates = Object.create(null);\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array} An array of the visible portion of the PDF page in user\n   *   space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise} A promise that is resolved with an {Array} of the\n   *   annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains the promise, which\n   *                       is resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance = canvasFactory || new DOMCanvasFactory();\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    intentState.displayReadyCapability.promise\n      .then(transparency => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics(transparency);\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise} A promise resolved with an {@link PDFOperatorList}\n   *   object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = {};\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} ReadableStream to read textContent chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise} That is resolved a {@link TextContent}\n   *   object that represent the page text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    Object.keys(this.intentStates).forEach(intent => {\n      const intentState = this.intentStates[intent];\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        return;\n      }\n      intentState.renderTasks.forEach(function (renderTask) {\n        const renderCompleted = renderTask.capability.promise.catch(\n          function () {}\n        ); // ignoring failures\n        waitOn.push(renderCompleted);\n        renderTask.cancel();\n      });\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicating if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (\n      !this.pendingCleanup ||\n      Object.keys(this.intentStates).some(intent => {\n        const intentState = this.intentStates[intent];\n        return (\n          intentState.renderTasks.length !== 0 ||\n          !intentState.operatorList.lastChunk\n        );\n      })\n    ) {\n      return false;\n    }\n\n    Object.keys(this.intentStates).forEach(intent => {\n      delete this.intentStates[intent];\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this.intentStates[intent];\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this.intentStates[args.intent];\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(\n      new AbortException(reason && reason.message)\n    );\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    Object.keys(this.intentStates).some(intent => {\n      if (this.intentStates[intent] === intentState) {\n        delete this.intentStates[intent];\n        return true;\n      }\n      return false;\n    });\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        const transferable = transfers && transfers.includes(buffer);\n        if (transferable) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort`.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n */\n\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support,\n    // so we've removed the if branch\n    if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath =\n        document.currentScript && document.currentScript.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      // modified by ngx-extended-pdf-viewer - we don't need node.js support,\n      deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler =\n        globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        if (typeof SystemJS !== \"object\") {\n          // Manually load SystemJS, since it's only necessary for fake workers.\n          await loadScript(\"../node_modules/systemjs/dist/system.js\");\n          await loadScript(\"../systemjs.config.js\");\n        }\n        const worker = await SystemJS.import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      // modified by ngx-extended-pdf-viewer - we don't need node.js support,\n      // so we can drop the if statement\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction, which controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *                                       parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n    });\n    this._params = params;\n    // modified by ngx-extended-pdf-viewer #376\n    let cMapUrl = params.cMapUrl;\n    if (cMapUrl.constructor.name === \"Function\") {\n      cMapUrl = cMapUrl();\n    }\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n    // end of modification\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")\n      ) {\n        assert(reason instanceof Error, \"DocException: expected an Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (\n            params.pdfBug &&\n            globalThis.FontInspector &&\n            globalThis.FontInspector.enabled\n          ) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"FontType3Res\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (\n            imageData &&\n            \"data\" in imageData &&\n            imageData.data.length > MAX_IMAGE_SIZE_TO_STORE\n          ) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader\n            ? this._fullReader.filename\n            : null,\n        };\n      });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n * @alias RenderTask\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    initializeGraphics(transparency = false) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (\n        this._pdfBug &&\n        globalThis.StepperManager &&\n        globalThis.StepperManager.enabled\n      ) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  setPDFNetworkStreamFactory,\n  version,\n  build,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({ docId, onUnsupportedFeature }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(function (nativeFontFace) {\n      document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported = typeof document !== \"undefined\" && !!document.fonts;\n    return shadow(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(docId) {\n      super(docId);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m && m[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, function () {\n        document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({\n          featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n        });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nvar MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\n\n// Heuristic value used when enforcing minimum line widths.\nvar MIN_WIDTH_FACTOR = 0.65;\n\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\n\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        var m = this._transformMatrix;\n        var a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = (function CachedCanvasesClosure() {\n  // eslint-disable-next-line no-shadow\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      var canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (var id in this.cache) {\n        var canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n\n  var width = imgData.width,\n    height = imgData.height;\n  var i,\n    j,\n    j0,\n    width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  var POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  var lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height),\n    pos = 0,\n    ii;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128,\n      elem = data0[i];\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  var count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    var coords = [p % width1, i];\n\n    var type = points[p],\n      p0 = p,\n      pp;\n    do {\n      var step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      var o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = (function CanvasExtraStateClosure() {\n  // eslint-disable-next-line no-shadow\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\nvar CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  var EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  var EXECUTION_STEPS = 10;\n\n  // eslint-disable-next-line no-shadow\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0,\n      destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      var srcLength = src.byteLength;\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = (width + 7) >> 3;\n      var white = 0xffffffff;\n      var black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          var k = 0;\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      var destPos = 3; // alpha component offset\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    for (var i = 3; i < length; i += 4) {\n      var y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n\n    var composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    var backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        var transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      if (this.current.activeSMask !== null) {\n        this.endSMaskGroup();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = \"smaskGroupAt\" + this.groupLevel;\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      var groupCtx = this.current.resumeSMaskCtx;\n      var currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x,\n        y = current.y;\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n            if (width === 0) {\n              width = this.getSinglePixelWidth();\n            }\n            if (height === 0) {\n              height = this.getSinglePixelWidth();\n            }\n            var xw = x + width;\n            var yh = y + height;\n            this.ctx.moveTo(x, y);\n            this.ctx.lineTo(xw, y);\n            this.ctx.lineTo(xw, yh);\n            this.ctx.lineTo(x, yh);\n            this.ctx.lineTo(x, y);\n            this.ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (\n        strokeColor &&\n        strokeColor.hasOwnProperty(\"type\") &&\n        strokeColor.type === \"Pattern\"\n      ) {\n        // for patterns, we transform to pattern space, calculate\n        // the pattern, call stroke, and restore to user space\n        ctx.save();\n        // The current transform will be replaced while building the pattern,\n        // but the line width needs to be adjusted by the current transform, so\n        // we must scale it. To properly fix this we should be using a pattern\n        // transform instead (see #10955).\n        const transform = ctx.mozCurrentTransform;\n        const scale = Util.singularValueDecompose2dScale(transform)[0];\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth * scale\n        );\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth\n        );\n        ctx.stroke();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      var name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      var italic = fontObj.italic ? \"italic\" : \"normal\";\n      var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      var addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var spacingDir = vertical ? 1 : -1;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      var simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      var x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          var measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            var characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (glyph.isInFont || font.missingFile) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n            if (accent) {\n              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform\n              );\n            }\n          }\n        }\n\n        var charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var spacingDir = font.vertical ? 1 : -1;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      var i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n\n        var transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n      if (IR[0] === \"TilingPattern\") {\n        var color = IR[1];\n        var baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        var canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      var ctx = this.ctx;\n\n      this.save();\n      var pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      var inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = Util.applyTransform([0, 0], inv);\n        var br = Util.applyTransform([0, height], inv);\n        var ul = Util.applyTransform([width, 0], inv);\n        var ur = Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      this.save();\n      var currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      var bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      var canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      var groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      var ctx = this.ctx;\n      var width = img.width,\n        height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      var ctx = this.ctx;\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      var ctx = this.ctx;\n\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width,\n          height = image.height;\n\n        var maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0],\n        b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2],\n        d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      var imgToPaint, tmpCanvas;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width,\n        paintHeight = height;\n      var tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        var newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n\n      var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    paintXObject: function CanvasGraphics_paintXObject() {\n      warn(\"Unsupported 'paintXObject' command.\");\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      // TODO Marked content.\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      // TODO Marked content.\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      // TODO Marked content.\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        // max of the current horizontal and vertical scale\n        this._cachedGetSinglePixelWidth = Math.sqrt(\n          Math.max(\n            inverse[0] * inverse[0] + inverse[1] * inverse[1],\n            inverse[2] * inverse[2] + inverse[3] * inverse[3]\n          )\n        );\n      }\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      var transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n  };\n\n  for (var op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nvar ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var bbox = raw[2];\n    var colorStops = raw[3];\n    var p0 = raw[4];\n    var p1 = raw[5];\n    var r0 = raw[6];\n    var r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        var grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nvar createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    var coords = context.coords,\n      colors = context.colors;\n    var bytes = data.data,\n      rowSize = data.width * 4;\n    var tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    var c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    var c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    var c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    var minY = Math.round(y1),\n      maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n      for (var x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    var EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    var BORDER_SIZE = 2;\n\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    var width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n\n    var context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    var paddedWidth = width + BORDER_SIZE * 2;\n    var paddedHeight = height + BORDER_SIZE * 2;\n\n    var canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      var tmpCtx = tmpCanvas.context;\n\n      var data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        var bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        var scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            var matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        var temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\nvar TilingPattern = (function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  // eslint-disable-next-line no-shadow\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      var x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      var curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      var combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      var dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      var dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      var tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      var tmpCtx = tmpCanvas.context;\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      var size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          var cssColor = Util.makeCssRgb(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst GlobalWorkerOptions = Object.create(null);\n\n/**\n * Defines global port for worker process. Overrides the `workerSrc` option.\n * @var {Object}\n */\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\n/**\n * A string containing the path and filename of the worker file.\n *\n * NOTE: The `workerSrc` option should always be set, in order to prevent any\n *       issues when using the PDF.js library.\n * @var {string}\n */\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error, prefer-const: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"./xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    const obj = Object.create(null);\n    for (const [key, value] of this._metadataMap) {\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCharCode(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCharCode(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function (child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor() {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleXMLParser };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nvar WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  var smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  var smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    var cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  var figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  var figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    var cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    var count = 0;\n    var i, ii, rows;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          rows = (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords,\n      colorsMap = context.colors;\n    var pIndex = 0,\n      cIndex = 0;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          var cols = figure.verticesPerRow;\n          rows = (ps.length / cols) | 0;\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeCssRgb(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLSectionElement} container\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(container, trigger, data) {\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the link annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LinkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"linkAnnotation\";\n\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else {\n      this._bindLink(link, data.dest);\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n      return false;\n    };\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  /**\n   * Render the widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof WidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Show only the container for unsupported field types.\n    return this.container;\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = this.data.fieldValue;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", this.data.fieldValue);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n\n      let font = null;\n      if (\n        this.data.fontRefName &&\n        this.page.commonObjs.has(this.data.fontRefName)\n      ) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @param {Object} font\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element, font) {\n    // TODO: This duplicates some of the logic in CanvasGraphics.setFont().\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n\n    // Use a reasonable default font if the font doesn't specify a fallback.\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the checkbox widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof CheckboxWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the radio button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof RadioButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"radio\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue === this.data.buttonValue) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  /**\n   * Render the push button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof PushButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the choice widget annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof ChoiceWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.displayValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the popup annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PopupAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const parentLeft = parseFloat(parentElement.style.left);\n    const parentWidth = parseFloat(parentElement.style.width);\n    this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${\n      parentElement.style.top\n    }`;\n    this.container.style.left = `${parentLeft + parentWidth}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  /**\n   * Render the popup's HTML element.\n   *\n   * @public\n   * @memberof PopupElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the free text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof FreeTextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the line annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the square annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquareAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the circle annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CircleAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the polyline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PolylineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the caret annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CaretAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the ink annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof InkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the highlight annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof HighlightAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the underline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof UnderlineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the squiggly annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquigglyAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the strikeout annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StrikeOutAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the stamp annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StampAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, /* isRenderable = */ true);\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: stringToPDFString(filename),\n        filename,\n        content,\n      });\n    }\n  }\n\n  /**\n   * Render the file attachment annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof FileAttachmentAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms || false,\n        svgFactory: new DOMSVGFactory(),\n      });\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\n          \",\"\n        )})`;\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {TextContent} [textContent] - Text content to render (the object\n *   is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {PageViewport} viewport - The target viewport to properly\n *   layout the text runs.\n * @property {Array} [textDivs] - HTML elements that are correspond to the\n *   text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array} [textContentItemsStr] - Strings that correspond to the\n *   `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\nvar renderTextLayer = (function renderTextLayerClosure() {\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  var NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    var textDiv = document.createElement(\"span\");\n    var textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    var tx = Util.transform(task._viewport.transform, geom.transform);\n    var angle = Math.atan2(tx[1], tx[0]);\n    var style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    var fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      // When the horizontal/vertical scaling differs significantly, also scale\n      // even single-char text to improve highlighting (fixes issue11713.pdf).\n      if (\n        absScaleX !== absScaleY &&\n        Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n      ) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      var angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      var divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      var divHeight = fontHeight;\n\n      var m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    var textDivs = task._textDivs;\n    var capability = task._capability;\n    var textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (var i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n    return result;\n  }\n\n  function expand(task) {\n    var bounds = task._bounds;\n    var viewport = task._viewport;\n\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (var i = 0; i < expanded.length; i++) {\n      var div = bounds[i].div;\n      var divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      var e = expanded[i],\n        b = bounds[i];\n      var m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      var ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        var t = Util.applyTransform(p, m);\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    var bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    var expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function (box, i) {\n      var e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    var fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    var horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function (boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      var i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      var j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      var horizonPart, affectedBoundary;\n      var q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      var changedHorizon = [],\n        lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        var useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        var used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function (horizonPart) {\n      var affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(\n      globalThis.FontInspector && globalThis.FontInspector.enabled\n    );\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  /**\n   * Starts rendering of the text layer.\n   *\n   * @param {TextLayerRenderParameters} renderParameters\n   * @returns {TextLayerRenderTask}\n   */\n  // eslint-disable-next-line no-shadow\n  function renderTextLayer(renderParameters) {\n    var task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n/* eslint no-var: error */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  // eslint-disable-next-line no-shadow\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement &&\n        current.txtElement.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeCssRgb(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    ).then(response => {\n      if (!validateResponseStatus(response.status)) {\n        throw createResponseStatusError(response.status, url);\n      }\n      this._readCapability.resolve();\n      this._reader = response.body.getReader();\n    });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n"]}